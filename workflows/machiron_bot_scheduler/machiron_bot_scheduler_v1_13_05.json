{
  "name": "machiron_bot_scheduler_v1_13_05",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "d803072c-58f5-42cc-b43d-8cb324cea89f",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -140,
        0
      ],
      "id": "7b71f149-b78e-4203-ad02-e3e74522f5bf",
      "name": "Webhook",
      "webhookId": "d803072c-58f5-42cc-b43d-8cb324cea89f"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9aaac50e-3262-4fea-ad43-9cdf44d36fa2",
              "name": "numCilente",
              "value": "={{ $json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "f219356d-cb0e-4b7e-88a2-4dc55943cc15",
              "name": "numEmpresa",
              "value": "={{ $json.body.sender }}",
              "type": "string"
            },
            {
              "id": "4ac047e5-7b5b-48cb-9736-95d34e116c68",
              "name": "nomeCliente",
              "value": "={{ $json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "f59590f6-0140-4e61-be97-cfa12f89eefd",
              "name": "instance",
              "value": "={{ $json.body.data.instanceId }}",
              "type": "string"
            },
            {
              "id": "53ea213d-e90e-48b2-afcc-43d4835c203a",
              "name": "msg",
              "value": "={{ $json.body.data.message.conversation }}",
              "type": "string"
            },
            {
              "id": "112a6a2a-e8b1-458e-a9c3-d55f62d89216",
              "name": "msgType",
              "value": "={{ $json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "cea398ec-ca8a-465f-b69b-2c5dfadf9ca0",
              "name": "msgID",
              "value": "={{ $json.body.data.key.id }}",
              "type": "string"
            },
            {
              "id": "b219da5b-19a3-4030-b9b2-dc08ef65633f",
              "name": "base64",
              "value": "={{ $json.body.data.message.base64 }}",
              "type": "string"
            },
            {
              "id": "a114f702-a022-42c6-b4bd-139b63da8ec2",
              "name": "instanceIDtelcliente",
              "value": "={{ $json.body.data.instanceId }}{{ $json.body.data.key.remoteJid }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        140,
        0
      ],
      "id": "2b0e2cad-e3ae-46fc-b55d-32527ba912fe",
      "name": "Campos iniciais"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1f255b8b-70a6-4209-93ac-7d58873daca9",
              "leftValue": "={{ $('Webhook').item.json.body.data.key.fromMe }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        420,
        0
      ],
      "id": "e7e703a2-533a-4ebd-a9b9-0b7d33348824",
      "name": "A Empresa assumiu o atendimento?"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "empresa",
          "mode": "list",
          "cachedResultName": "empresa"
        },
        "where": {
          "values": [
            {
              "column": "telefonewhatsapp",
              "value": "={{ $('A Empresa assumiu o atendimento?').item.json.numEmpresa }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        720,
        100
      ],
      "id": "e4e75743-55d2-4241-a94b-c3c4126ef697",
      "name": "get_empresa",
      "credentials": {
        "postgres": {
          "id": "LqGFAFaRsmM4ACIk",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "clientes",
          "mode": "list",
          "cachedResultName": "clientes"
        },
        "where": {
          "values": [
            {
              "column": "telefonewhatsapp",
              "value": "={{ $('Campos iniciais').item.json.numCilente }}"
            },
            {
              "column": "idempresa",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        940,
        100
      ],
      "id": "490b7ef0-c8f5-4f77-9207-a518291b72ab",
      "name": "get_cliente",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "LqGFAFaRsmM4ACIk",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9ca7db0e-8128-49db-93f8-5a623359c0cd",
              "leftValue": "={{ $json.telefonewhatsapp }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1280,
        160
      ],
      "id": "41a503b2-6733-4d70-956b-fddbf6154dbf",
      "name": "Verificar se Cliente Cadastrado",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "empresa",
          "mode": "list",
          "cachedResultName": "empresa"
        },
        "where": {
          "values": [
            {
              "column": "telefonewhatsapp",
              "value": "={{ $json.numEmpresa }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        660,
        -140
      ],
      "id": "46b6b8f4-d14d-4172-8988-68a7c59422d3",
      "name": "get_empresa1",
      "credentials": {
        "postgres": {
          "id": "LqGFAFaRsmM4ACIk",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "clientes",
          "mode": "list",
          "cachedResultName": "clientes"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $json.id }}",
            "idempresa": "={{ $json.id }}",
            "telefonewhatsapp": "={{ $('A Empresa assumiu o atendimento?').item.json.numCilente }}",
            "ativo": "false"
          },
          "matchingColumns": [
            "telefonewhatsapp",
            "idempresa"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "nome",
              "displayName": "nome",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "telefonewhatsapp",
              "displayName": "telefonewhatsapp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ativo",
              "displayName": "ativo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "conversationid",
              "displayName": "conversationid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "idempresa",
              "displayName": "idempresa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        860,
        -60
      ],
      "id": "d834485c-7682-462f-9891-d91ceb6c1ea6",
      "name": "update_cliente_ativo",
      "credentials": {
        "postgres": {
          "id": "LqGFAFaRsmM4ACIk",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "clientes",
          "mode": "list",
          "cachedResultName": "clientes"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "nome": "={{ $('Campos iniciais').item.json.nomeCliente }}",
            "telefonewhatsapp": "={{ $('Campos iniciais').item.json.numCilente }}",
            "idempresa": "={{ $('get_empresa').item.json.id }}",
            "ativo": "true"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "nome",
              "displayName": "nome",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "telefonewhatsapp",
              "displayName": "telefonewhatsapp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ativo",
              "displayName": "ativo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "conversationid",
              "displayName": "conversationid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "idempresa",
              "displayName": "idempresa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1440,
        320
      ],
      "id": "b861ec8c-4a6c-4099-b366-10bfebeb65f1",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "LqGFAFaRsmM4ACIk",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "54392bbd-3deb-4622-806a-1c17b80b5986",
              "leftValue": "={{ $json.botativo }}",
              "rightValue": "false",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1680,
        160
      ],
      "id": "1d3af3bf-bdd3-4234-8da0-a10293298893",
      "name": "BotInativo"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2000,
        -80
      ],
      "id": "925e8209-5c7a-493a-ba6e-125f1807b813",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bb0c009f-7be7-4280-9721-105151589181",
              "leftValue": "={{ $('Campos iniciais').item.json.msgType }}",
              "rightValue": "audioMessage",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1980,
        340
      ],
      "id": "47d71093-1ffd-4ef6-acbd-492061e8e8ed",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "13b5e01b-7b6b-4857-ba63-d1627d2ab906",
              "name": "base64",
              "value": "={{ $('Campos iniciais').item.json.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2240,
        160
      ],
      "id": "a7c00734-7a71-46eb-a35a-7472bc05347d",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "audio.mp3",
          "mimeType": "audio/mpeg"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2460,
        160
      ],
      "id": "beae5441-02e4-4308-a027-3f93da502ea3",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2680,
        160
      ],
      "id": "51e717f3-28c8-4716-8cc8-3df2ba44cdcc",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "UM486K0DSVLyeNZp",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d02c8398-ab90-40b9-8469-6ddc9935fafa",
              "name": "msg",
              "value": "={{ $('A Empresa assumiu o atendimento?').item.json.msg }}{{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2920,
        380
      ],
      "id": "0a88f84f-4670-4e4e-8aed-d3d5144cae68",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Campos iniciais').item.json.instanceIDtelcliente }}",
        "messageData": "={{ $json.msg }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3220,
        380
      ],
      "id": "82d520bb-faa9-4647-9639-26a2d4572d05",
      "name": "Criar lista e incluir msgs",
      "credentials": {
        "redis": {
          "id": "Cox7XtTFAJAhBy53",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Campos iniciais').item.json.instanceIDtelcliente }}",
        "keyType": "=automatic",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3980,
        380
      ],
      "id": "b027d5b6-eaca-4903-aacb-7665271538b4",
      "name": "Obter Lista",
      "credentials": {
        "redis": {
          "id": "Cox7XtTFAJAhBy53",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c63c0c47-ed30-4526-8b20-3b8a52d14144",
              "leftValue": "={{ $json.propertyName.last() }}",
              "rightValue": "={{ $('Edit Fields1').item.json.msg }}",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4240,
        420
      ],
      "id": "2b8324b2-2706-4223-8937-5b894b78dde2",
      "name": "O ultimo registro da lista é diferente do Edit Field Msg?"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4460,
        320
      ],
      "id": "dfa52826-b12b-4352-be04-85a5fd719d22",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Campos iniciais').item.json.instanceIDtelcliente }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4580,
        520
      ],
      "id": "5c01f042-41dd-4931-accd-a7335f8875b9",
      "name": "Delete Lista",
      "credentials": {
        "redis": {
          "id": "Cox7XtTFAJAhBy53",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3620,
        400
      ],
      "id": "3ddbd48e-7ab2-4d20-b234-f52e17b674a0",
      "name": "Wait1",
      "webhookId": "a72885e8-9102-4029-819b-d9fa4965669b"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "109e527d-040b-445a-8f5c-cc2a34c69c03",
              "name": "Mensagem",
              "value": "={{ $json[\"propertyName\"].join(\", \") }}",
              "type": "string"
            },
            {
              "id": "b328fe2a-12c8-4b3f-bd9d-e2a4659c413a",
              "name": "ConversationID",
              "value": "={{ $('get_cliente').item.json.conversationid }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4860,
        620
      ],
      "id": "69f0e259-a9e4-4a0b-963f-3b52fa88600f",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fa099e4e-6d1f-4651-aa36-5987ca8bd10d",
              "leftValue": "={{ $('get_cliente').item.json.conversationid }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6300,
        780
      ],
      "id": "df93d480-d8d2-4732-a40e-60461ec58368",
      "name": "Verifica se cliente ja tem conversa iniciada"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "clientes",
          "mode": "list",
          "cachedResultName": "clientes"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "conversationid": "={{ $json.conversation_id }}",
            "telefonewhatsapp": "={{ $('Campos iniciais').item.json.numCilente }}",
            "idempresa": "={{ $('get_empresa').item.json.id }}"
          },
          "matchingColumns": [
            "telefonewhatsapp",
            "idempresa"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "nome",
              "displayName": "nome",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telefonewhatsapp",
              "displayName": "telefonewhatsapp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ativo",
              "displayName": "ativo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "conversationid",
              "displayName": "conversationid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "idempresa",
              "displayName": "idempresa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        6720,
        560
      ],
      "id": "2199e294-c13a-4928-b94e-81057113c0fa",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "LqGFAFaRsmM4ACIk",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        7000,
        880
      ],
      "id": "1a7a2c9c-23b6-4c64-91dc-41b51807a0e8",
      "name": "Merge"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        5060,
        880
      ],
      "id": "5cb87818-aa2f-48a7-ade6-a51920e14fd4",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "UM486K0DSVLyeNZp",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('get_cliente').item.json.telefonewhatsapp }}",
        "contextWindowLength": 50
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        5220,
        920
      ],
      "id": "5855f4e5-0ddd-4c08-9b82-374794b53eec",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "LqGFAFaRsmM4ACIk",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.Mensagem }}",
        "options": {
          "systemMessage": "=HOJE É: {{ $now }}\nTELEFONE DO CONTATO: \n{{$('get_cliente').item.json.telefonewhatsapp }}\n\nINSTRUÇÃO IMPORTANTE:\n- Ao criar ou editar qualquer exame no Google Calendar, incluir sempre o telefone do paciente na descrição do agendamento, juntamente com o nome completo, data de nascimento, **unidade escolhida** (Mooca ou Ipiranga) e quaisquer outras informações clínicas relevantes fornecidas pelo paciente.\n\n------------------------------------------------------------------------------------\nPAPEL:\nVocê é uma atendente do WhatsApp, altamente especializada, que atua em nome da Clínica de Radiologia Papaiz, prestando um serviço de excelência. Sua missão é atender aos pacientes de maneira ágil e eficiente, respondendo dúvidas e auxiliando em agendamentos, cancelamentos ou remarcações de **exames radiológicos**.\n\nPERSONALIDADE E TOM DE VOZ:\n- Simpática, prestativa e humana\n- Tom de voz sempre simpático, acolhedor e respeitoso\n\nOBJETIVO:\n1. Fornecer atendimento diferenciado e cuidadoso aos pacientes.\n2. Responder dúvidas sobre a clínica (exames, horários, localização, formas de pagamento).\n3. Agendar, remarcar e cancelar exames de forma simples e eficaz.\n4. Agir passo a passo para garantir rapidez e precisão em cada atendimento.\n\nCONTEXTO:\n- Você otimiza o fluxo interno da clínica, provendo informações e reduzindo a carga administrativa dos profissionais da radiologia.\n- Seu desempenho impacta diretamente a satisfação do paciente e a eficiência das operações clínicas.\n\n------------------------------------------------------------------------------------\nSOP (Procedimento Operacional Padrão):\n\n1. Início do atendimento e identificação de interesse em agendar:\n   - Cumprimente o paciente de forma acolhedora. \n   - Explique que é possível agendar por texto.\n   - Se possível, incentive o envio de áudio caso o paciente prefira, destacando a praticidade.\n\n2. Solicitar dados do paciente:\n   - Peça nome completo e data de nascimento.\n   - Confirme o telefone de contato que chegou na mensagem (ele será incluído na descrição do agendamento).\n   - Pergunte **qual unidade deseja agendar: Mooca ou Ipiranga**.\n\n3. Identificar necessidade:\n   - Pergunte qual exame o paciente deseja realizar.\n   - Solicite data de preferência e se o paciente tem preferência por turno (manhã ou tarde).\n\n3.1. Identificar forma de atendimento:\n   - Pergunte ao paciente: \"Você fará o exame por convênio ou particular?\"\n   - Se o paciente responder **convênio**:\n     - Pergunte: \"Qual é o seu convênio, por favor?\"\n     - Responda: \"Perfeito! O convênio <convenio informado na mensagem> é aceito aqui na clínica.\"\n     - Anote essa informação e **inclua o nome do convênio na descrição do evento** no Google Calendar.\n\n   - Se o paciente responder **particular**:\n     - Informe: \"Perfeito! O atendimento particular será registrado normalmente. Em breve uma pessoa da clínica entrará em contato por telefone para confirmar os detalhes do pagamento e concluir o agendamento.\"\n     - Continue coletando os dados normalmente (tipo de exame, data, turno, unidade etc.).\n     - Ao usar a tool **create_evento**, **adicione “[PENDENTE]” no título do evento** para sinalizar que ainda será confirmado por telefone.\n\n\n4. Verificar disponibilidade:\n   - Use as tools do calendar apenas após ter todos os dados e a unidade definidos.\n   - Use a tool **get_all_eventos** da unidade escolhida (Mooca ou Ipiranga) para obter os horários disponíveis.\n\n5. Informar disponibilidade:\n   - Retorne ao paciente com os horários livres encontrados para a data e unidade solicitadas.\n\n6. Coletar informações adicionais:\n   - Se o paciente fornecer dados extras (ex.: médico solicitante, convênio, tipo de exame, condições de saúde), inclua tudo na descrição do evento no Google Calendar.\n\n7. Agendar exame:\n   - Após confirmação do paciente:\n     - Use a tool **create_evento** da unidade selecionada para criar o evento, passando:\n       - Nome completo\n       - Data de nascimento\n       - Telefone de contato\n       - Unidade (Mooca ou Ipiranga) <o id na lista de calendários é Mooca=e73934158b72b3e2697775ad8c10ce47dc6b9061f07130415c005546ab3ffd4c@group.calendar.google.com ou Ipiranga=b8151cd4fcb90454ddfd02b5d41b7485ea45fa55a0e6bf7ae62ac07ab6d99cba@group.calendar.google.com\n)>\n       - Tipo de exame\n       - Data e hora escolhidas\n       - Informações adicionais\n     - Nunca agende datas ou horários passados ou com conflitos.\n\n8. Confirmar agendamento:\n   - Espere o retorno de sucesso da **create_evento** e então confirme com o paciente.\n\n------------------------------------------------------------------------------------\nINSTRUÇÕES GERAIS:\n\n1. Respostas claras, objetivas e úteis:\n   - Forneça informações sobre tipos de exame, horários, endereço, valores e convênios.\n\n2. Sem diagnósticos ou opiniões médicas:\n   - Se o paciente insistir em diagnóstico, use a ferramenta “Escalar humano”.\n\n3. Pacientes insatisfeitos:\n   - Mantenha a empatia e utilize a ferramenta “Escalar humano”.\n\n4. Assuntos fora do escopo da clínica:\n   - Responda:  \n     \"Desculpe, mas não consigo ajudar com este assunto. Por favor, entre em contato pelo número 0800 940 000. Enviei uma cópia da nossa conversa para o gestor de atendimento.\"\n\n5. Nunca fornecer informações erradas:\n   - Evite erros sobre horários, contatos ou serviços.\n\n6. Nunca use emojis ou linguagem informal:\n   - Mantenha a sobriedade do atendimento.\n\n7. Nunca confirme exames sem o retorno do **create_evento** da unidade correspondente:\n   - Garanta que o evento foi criado com sucesso antes de dar a resposta final.\n\n8. Dupla verificação:\n   - Confirme sempre os dados e a **unidade escolhida** para evitar equívocos.\n\n------------------------------------------------------------------------------------\nHORÁRIOS DE FUNCIONAMENTO:\n- Segunda a Sábado: 07h às 18h\n- Domingo e Feriados: Fechado\n\nLOCALIZAÇÕES E CONTATO:\n1. **Unidade Mooca**  \n   - Endereço: Rua dos Exames, 123 - Mooca, São Paulo - SP  \n   - Telefone: (11) 3234-5678\n\n2. **Unidade Ipiranga**  \n   - Endereço: Rua dos Radiologistas, 456 - Ipiranga, São Paulo - SP  \n   - Telefone: (11) 3298-1234\n\n- WhatsApp Geral: (11) 98888-1234  \n- E-mail: atendimento@papaizradiologia.com.br  \n- Site: www.papaizradiologia.com.br\n\nEXAMES E ESPECIALIDADES:\n- Radiografia Odontológica\n- Tomografia Computadorizada\n- Documentação Ortodôntica Completa\n\nVALORES E FORMAS DE PAGAMENTO:\n- Valores variam conforme o exame solicitado\n- Formas de pagamento: PIX, dinheiro, cartão de débito ou crédito\n- Convênios aceitos: Odontoprev, Bradesco Dental, SulAmérica, Amil Dental\n\n------------------------------------------------------------------------------------\nTOOLS:\n\n1. create_evento  \n   - Usada para agendar um novo exame no Google Calendar da **unidade correta**.  \n   - IDs dos calendários:  \n     - Mooca = e73934158b72b3e2697775ad8c10ce47dc6b9061f07130415c005546ab3ffd4c@group.calendar.google.com  \n     - Ipiranga = b8151cd4fcb90454ddfd02b5d41b7485ea45fa55a0e6bf7ae62ac07ab6d99cba@group.calendar.google.com  \n   - Deve conter obrigatoriamente:\n     - Nome completo (no título do evento; incluir prefixo [PENDENTE] se for particular)\n     - Data de nascimento\n     - Telefone do paciente\n     - Unidade (Mooca ou Ipiranga)\n     - Tipo de exame\n     - Data e hora agendadas\n     - Informações adicionais:\n       - Se for convênio, inclua o nome do convênio na descrição\n       - Se for particular, inclua a nota: “Paciente será contatado para confirmação de pagamento (atendimento particular)”\n\n\n2. update_eventos  \n    <\n      o id na lista de calendários é Mooca=e73934158b72b3e2697775ad8c10ce47dc6b9061f07130415c005546ab3ffd4c@group.calendar.google.com Ipiranga=b8151cd4fcb90454ddfd02b5d41b7485ea45fa55a0e6bf7ae62ac07ab6d99cba@group.calendar.google.com\n      >  \n    - Usada para alterar dados de um evento já criado:\n     - Mudar data, hora ou unidade\n     - Corrigir dados do paciente\n     - Adicionar \"[Confirmado]\" ao título do evento\n\n3. get_all_eventos  \n    <\n      o id na lista de calendários é Mooca=e73934158b72b3e2697775ad8c10ce47dc6b9061f07130415c005546ab3ffd4c@group.calendar.google.com Ipiranga=b8151cd4fcb90454ddfd02b5d41b7485ea45fa55a0e6bf7ae62ac07ab6d99cba@group.calendar.google.com\n      >  \n\n- Usada para listar todos os eventos agendados em uma data específica na **unidade desejada**.  \n   - Requer:\n     - Nome completo\n     - Data de nascimento\n     - Exame desejado\n     - Data de preferência\n     - Unidade\n\n4. get_evento  \n    <\n      o id na lista de calendários é Mooca=e73934158b72b3e2697775ad8c10ce47dc6b9061f07130415c005546ab3ffd4c@group.calendar.google.com Ipiranga=b8151cd4fcb90454ddfd02b5d41b7485ea45fa55a0e6bf7ae62ac07ab6d99cba@group.calendar.google.com\n      >  \n\n- Usada para consultar detalhes específicos de um exame agendado com base no ID do evento.\n\n5. delete_evento  \n    <\n      o id na lista de calendários é Mooca=e73934158b72b3e2697775ad8c10ce47dc6b9061f07130415c005546ab3ffd4c@group.calendar.google.com Ipiranga=b8151cd4fcb90454ddfd02b5d41b7485ea45fa55a0e6bf7ae62ac07ab6d99cba@group.calendar.google.com\n      >  \n- Usada para remover um agendamento de uma unidade.  \n   - Após deletar, use “Enviar telegram cancelamento” com nome, data, hora e unidade.\n\n------------------------------------------------------------------------------------\nEXEMPLOS DE FLUXO:\n\n1. Marcar exame\n   - Paciente: \"Quero marcar um exame\"\n   - Você:\n     - Cumprimente, explique que pode agendar por texto.\n     - Solicite nome completo, data de nascimento e confirme o telefone.\n     - Pergunte: \"Você fará o exame por convênio ou particular?\"\n       - Se for convênio:\n         - Pergunte: \"Qual é o seu convênio?\"\n         - Confirme que o convênio é aceito.\n         - Anote essa informação e continue normalmente.\n       - Se for particular:\n         - Diga: \"Perfeito! Em breve entraremos em contato por telefone para confirmar os detalhes do pagamento.\"\n         - O evento deve ser criado com **[PENDENTE]** no título e incluir essa observação na descrição.\n     - Pergunte unidade (Mooca ou Ipiranga), tipo de exame, data e turno.\n     - Use **get_all_eventos** da unidade.\n     - Informe horários disponíveis.\n     - Agende com **create_evento** conforme a regra de convênio ou particular.\n     - Confirme com o paciente.\n\n\n2. Remarcar exame\n   - Paciente: \"Não poderei ir amanhã, quero remarcar.\"\n   - Você:\n     - Solicite nome completo, data de nascimento e exame.\n     - Pergunte **unidade agendada**.\n     - Solicite nova data e turno preferidos.\n     - Use **update_eventos** da unidade.\n     - Confirme após o sucesso.\n\n3. Cancelar exame\n   - Paciente: \"Preciso cancelar meu exame.\"\n   - Você:\n     - Solicite nome completo, data de nascimento, exame e **unidade**.\n     - Use **delete_evento** da unidade.\n     - Use \"Enviar telegram cancelamento\".\n     - Confirme o cancelamento ao paciente.\n\n4. Mensagens de confirmação com ID do evento:\n   - Paciente: \"Confirmar, ID do evento\"\n     - Use **update_eventos** para incluir “[Confirmado]” no título do evento.\n     - Confirme ao paciente que está tudo certo.\n\n   - Paciente: \"Reagendar, ID do evento\"\n     - Use **delete_evento** para excluir.\n     - Envie link de agendamento rápido.\n     - Oriente o paciente a escolher novo horário e unidade.\n\n------------------------------------------------------------------------------------\nOBSERVAÇÕES FINAIS:\n\n- Nunca forneça diagnósticos ou opiniões médicas.\n- Direcione qualquer dúvida fora do escopo à ferramenta “Escalar humano”.\n- Mantenha o tom profissional, claro e respeitoso. NÃO utilize emojis.\n- Link da agenda online: https://calendar.app.google/k43eFCyMvQts1ZSs9\n- Só agendar datas futuras, nunca passadas.\n- Nunca diga que é assistente virtual — faça um atendimento **humanizado**.\n- Use **update_eventos** para adicionar “[Confirmado]” quando o paciente confirmar com ID do evento.\n- Se o exame for particular, o evento criado no Google Calendar deve conter no **título** o prefixo [PENDENTE], e na descrição a anotação:  \n  “Paciente será contatado por telefone para confirmar pagamento. Atendimento particular.”\n- Se o exame for por convênio, o nome do convênio deve constar claramente na descrição do evento.\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        5380,
        620
      ],
      "id": "25d6779c-0b44-4f4f-bef8-518c877b2f19",
      "name": "Assistente Clínica",
      "retryOnFail": true,
      "waitBetweenTries": 1000
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://auto.machiron.com.br:8080/message/sendText/machironv1",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "A42123F57793-4847-AF10-C984C2F2854D"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('get_cliente').item.json.telefonewhatsapp }}"
            },
            {
              "name": "text",
              "value": "={{ $('AI Agent').item.json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8420,
        640
      ],
      "id": "7b441f83-da3a-4ea0-a238-ba6ae9be5753",
      "name": "Responder usuário no WhatsApp"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Assistente Clínica').item.json.output }}",
        "options": {
          "systemMessage": "Você é especialista em formatação de mensagem para whataspp, trabalhando somente na formatação e não alterando o conteúdo da menssagem.\n\n- Substitua ** por *\n- Remova #"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        7620,
        640
      ],
      "id": "a5db83bc-4804-4ef1-bfd8-ff5cc76c2f24",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        7620,
        840
      ],
      "id": "a66347dc-f7ad-4b3f-8643-c4694f6f7c28",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "UM486K0DSVLyeNZp",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Agente (Tools, MCP, Memória, Modelo LLM)",
        "height": 960,
        "width": 1100,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5000,
        480
      ],
      "id": "8d5c8ce2-646c-4a7b-b400-97ce54165ce3",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# Tratar e enviar mensagens de resposta WhatsApp \n",
        "height": 640,
        "width": 1220,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7560,
        400
      ],
      "id": "be83bf27-38d9-4ace-8cf5-93272c9379bd",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://auto.machiron.com.br:8080/chat/sendPresence/{{ $('Webhook').item.json.body.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Webhook').item.json.body.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{{ $('get_cliente').item.json.telefonewhatsapp }}\",\n  \"delay\": 3000,\n  \"presence\": \"composing\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8100,
        640
      ],
      "id": "c8ed974d-eb56-4b0a-a4a1-acff7c304e5e",
      "name": "HTTP Request - Status Digitando1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "get",
        "calendar": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Calendar', ``, 'string') }}",
          "mode": "id",
          "__regex": "(^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        5640,
        1020
      ],
      "id": "cf9c3c12-0df3-47f7-8faa-fbbe39b55f34",
      "name": "get_evento",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "IWcMYX5Jg2REY5RT",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Calendar', ``, 'string') }}",
          "mode": "id",
          "__regex": "(^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        5520,
        1020
      ],
      "id": "e4641daa-5852-4113-9a98-8c9a32ee4ddc",
      "name": "delete_evento",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "IWcMYX5Jg2REY5RT",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Calendar', ``, 'string') }}",
          "mode": "id",
          "__regex": "(^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "attendees": [],
          "description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', ``, 'string') }}",
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        5400,
        1020
      ],
      "id": "ff291538-1a4f-4fd0-9ee0-b39fe3554944",
      "name": "create_evento",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "IWcMYX5Jg2REY5RT",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Calendar', ``, 'string') }}",
          "mode": "id",
          "__regex": "(^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)"
        },
        "limit": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Limit', ``, 'number') }}",
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        5760,
        1020
      ],
      "id": "d35befcb-3167-48db-b142-56d8c177ac56",
      "name": "get_all_eventos",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "IWcMYX5Jg2REY5RT",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Calendar', ``, 'string') }}",
          "mode": "id",
          "__regex": "(^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {
          "description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', ``, 'string') }}",
          "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
          "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        5900,
        1020
      ],
      "id": "82226e91-cbb1-4982-b3f9-95c50a83539f",
      "name": "update_evento",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "IWcMYX5Jg2REY5RT",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "a1ea1c05-4132-4fd0-891b-59c52c4a635b",
      "name": "Extract from File"
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "accept": "application/json, text/plain, */*",
            "content-type": "application/json",
            "user-agent": "axios/1.7.7",
            "content-length": "1000",
            "accept-encoding": "gzip, compress, deflate, br",
            "host": "auto.machiron.com.br:5678",
            "connection": "keep-alive"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "machironv1",
            "data": {
              "key": {
                "remoteJid": "351969820957@s.whatsapp.net",
                "fromMe": false,
                "id": "3F7E8C8A763430010BE1"
              },
              "pushName": "Denis Gonçalves",
              "status": "DELIVERY_ACK",
              "message": {
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "R/6+RIfgDtqNnw==",
                    "senderTimestamp": "1746192194",
                    "recipientKeyHash": "RuOZBDnuiZxYzg==",
                    "recipientTimestamp": "1746656057"
                  },
                  "deviceListMetadataVersion": 2
                },
                "conversation": "quero marcar meu exame para amanhã as 10h"
              },
              "contextInfo": {
                "expiration": 0,
                "ephemeralSettingTimestamp": "0",
                "disappearingMode": {
                  "initiator": "CHANGED_IN_CHAT"
                }
              },
              "messageType": "conversation",
              "messageTimestamp": 1746796721,
              "instanceId": "46f91c0f-7001-4ddf-9f21-fff419d6b926",
              "source": "unknown"
            },
            "destination": "http://auto.machiron.com.br:5678/webhook-test/9fcb2a36-340b-4630-abe3-975826678b72",
            "date_time": "2025-05-09T10:18:42.182Z",
            "sender": "554797767553@s.whatsapp.net",
            "server_url": "http://localhost:8080",
            "apikey": "A42123F57793-4847-AF10-C984C2F2854D"
          },
          "webhookUrl": "http://auto.machiron.com.br:5678/webhook-test/9fcb2a36-340b-4630-abe3-975826678b72",
          "executionMode": "test"
        }
      }
    ]
  },
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Campos iniciais",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Campos iniciais": {
      "main": [
        [
          {
            "node": "A Empresa assumiu o atendimento?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "A Empresa assumiu o atendimento?": {
      "main": [
        [
          {
            "node": "get_empresa1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get_empresa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_empresa": {
      "main": [
        [
          {
            "node": "get_cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_cliente": {
      "main": [
        [
          {
            "node": "Verificar se Cliente Cadastrado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_empresa1": {
      "main": [
        [
          {
            "node": "update_cliente_ativo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar se Cliente Cadastrado": {
      "main": [
        [
          {
            "node": "BotInativo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Verificar se Cliente Cadastrado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BotInativo": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Criar lista e incluir msgs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Criar lista e incluir msgs": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obter Lista": {
      "main": [
        [
          {
            "node": "O ultimo registro da lista é diferente do Edit Field Msg?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "O ultimo registro da lista é diferente do Edit Field Msg?": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Lista",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Obter Lista",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Lista": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Assistente Clínica",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verifica se cliente ja tem conversa iniciada": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Assistente Clínica",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Assistente Clínica",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Assistente Clínica": {
      "main": [
        [
          {
            "node": "Verifica se cliente ja tem conversa iniciada",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "HTTP Request - Status Digitando1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Responder usuário no WhatsApp": {
      "main": [
        []
      ]
    },
    "HTTP Request - Status Digitando1": {
      "main": [
        [
          {
            "node": "Responder usuário no WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_evento": {
      "ai_tool": [
        [
          {
            "node": "Assistente Clínica",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "delete_evento": {
      "ai_tool": [
        [
          {
            "node": "Assistente Clínica",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "create_evento": {
      "ai_tool": [
        [
          {
            "node": "Assistente Clínica",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_all_eventos": {
      "ai_tool": [
        [
          {
            "node": "Assistente Clínica",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "update_evento": {
      "ai_tool": [
        [
          {
            "node": "Assistente Clínica",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        []
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Sao_Paulo",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "9b5cefa4-4518-4ca1-b90d-bfe93ea216f2",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "59672ee62c7d642a177618275fcf40449203b2f41961e285168a8c06f2b2e746"
  },
  "id": "ujULUL7fqLgfTBeB",
  "tags": [
    {
      "name": "prd",
      "id": "QWcQDCpG8MWaXtj8",
      "createdAt": "2025-05-13T15:13:09.320Z",
      "updatedAt": "2025-05-13T15:13:09.320Z"
    }
  ]
}